import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.tzUHMcfZ.js";const F=JSON.parse('{"title":"部署","description":"","frontmatter":{},"headers":[],"relativePath":"deploy.md","filePath":"deploy.md"}'),e={name:"deploy.md"},l=n(`<h1 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h1><p>管理后台console-ui有打包好的镜像在hub.docker.com；后端服务有配置的docker-compose.yml，支持docker-compose一键部署。</p><h2 id="使用docker-compose手动部署" tabindex="-1">使用docker-compose手动部署 <a class="header-anchor" href="#使用docker-compose手动部署" aria-label="Permalink to &quot;使用docker-compose手动部署&quot;">​</a></h2><blockquote><p>服务器配置就不多废话了，2核2G3M带宽跑得动，阿里云只要99😁</p></blockquote><h3 id="安装docker" tabindex="-1">安装docker <a class="header-anchor" href="#安装docker" aria-label="Permalink to &quot;安装docker&quot;">​</a></h3><blockquote><p>各个服务商都有文档，这里就不多说了,可以自行取官网查找文档</p></blockquote><p><a href="https://help.aliyun.com/zh/ecs/use-cases/deploy-and-use-docker-on-alibaba-cloud-linux-2-instances?spm=5176.21213303.J_qCOwPWspKEuWcmp8qiZNQ.21.3f8e2f3dtTC3Bf&amp;scm=20140722.S_help@@%E6%96%87%E6%A1%A3@@51853._.ID_help@@%E6%96%87%E6%A1%A3@@51853-RL_centos7%E5%AE%89%E8%A3%85docker-LOC_llm-OR_ser-V_3-RE_new3-P0_0" target="_blank" rel="noreferrer">阿里云</a>、 <a href="https://cloud.tencent.com/document/product/1207/45596" target="_blank" rel="noreferrer">腾讯云</a>、 <a href="https://support.huaweicloud.com/bestpractice-ecs/zh-cn_topic_0141067581.html" target="_blank" rel="noreferrer">华为云</a>、 <a href="https://cloud.baidu.com/doc/BCC/s/nkg8s52bt" target="_blank" rel="noreferrer">百度云</a>、 <a href="https://docs.jdcloud.com/cn/iavm/mdocker" target="_blank" rel="noreferrer">京东云</a>、 <a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-docker.html" target="_blank" rel="noreferrer">AWS</a></p><h3 id="安装git" tabindex="-1">安装git <a class="header-anchor" href="#安装git" aria-label="Permalink to &quot;安装git&quot;">​</a></h3><p>安装git的目的是拿到代码，如果不想安装git，也可以通过scp命令吧代码上传到服务器。具体安装过程略过。</p><h3 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要换成自己的仓库地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:const-undefined-man/julycms.com-server.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> julycms.com-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># docker启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h2 id="其他部署方式" tabindex="-1">其他部署方式 <a class="header-anchor" href="#其他部署方式" aria-label="Permalink to &quot;其他部署方式&quot;">​</a></h2><p>待更新！需要可持续集成部署的小伙伴可以<a href="/feedback.html">反馈</a></p><h2 id="关于多个服务的说明" tabindex="-1">关于多个服务的说明 <a class="header-anchor" href="#关于多个服务的说明" aria-label="Permalink to &quot;关于多个服务的说明&quot;">​</a></h2><p>julycms.com-server启动的是3000端口，管理后台julycms.com-console-ui用的是80端口，PC前台用的也是80端口，这里需要一个中间服务做代理。以下是各种服务器的配置。</p><h3 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 代理PC前台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:81</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 代理管理后台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /console-ui</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:82</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="apache" tabindex="-1">apache <a class="header-anchor" href="#apache" aria-label="Permalink to &quot;apache&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VirtualHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">80&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ServerName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> julycms.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 代理PC前台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ProxyPass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:81/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ProxyPassReverse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:81/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 代理管理后台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ProxyPass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /console-ui</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:82/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ProxyPassReverse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /console-ui</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:82/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/VirtualHost</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,19),t=[l];function h(p,k,r,o,c,d){return i(),a("div",null,t)}const y=s(e,[["render",h]]);export{F as __pageData,y as default};
