import{_ as e,c as a,o as l,a5 as o}from"./chunks/framework.tzUHMcfZ.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),t={name:"README.md"},i=o(`<p align="center"><a href="//www.julycms.com" target="blank"><img src="https://julycms.com/logo.svg" width="100" alt="julycms Logo"></a></p><p align="center">JulyCms v1.0.0</p><p align="center">一个基于<a href="https://nestjs.com/" target="_blank">nestjs</a>+<a href="https://typeorm.io/" target="_blank">typeorm</a>+<a href="https://v2.cn.vuejs.org/" target="_blank">vue2.x</a>快速搭建web应用程序的开源框架。</p><p><img src="https://julycms.com/admin.png" alt="预览"></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><blockquote><p>项目采用前后端分离，三个项目：后端服务、管理后台UI、PC前台UI。后端服务给管理后台、PC前台提供接口。如果想支持更多端点可以自行扩展。</p></blockquote><ul><li>前端采用Vue、Element UI。</li><li>后端采用NestJs、typeorm、Redis &amp; Jwt。</li><li>权限认证使用Jwt。</li><li>支持加载动态权限菜单，多方式轻松权限控制。</li><li>swagger文档支持</li><li>前后端代码分离，可单独部署。</li><li>支持docker compose部署</li></ul><h2 id="仓库" tabindex="-1">仓库 <a class="header-anchor" href="#仓库" aria-label="Permalink to &quot;仓库&quot;">​</a></h2><h3 id="gitee" tabindex="-1">gitee <a class="header-anchor" href="#gitee" aria-label="Permalink to &quot;gitee&quot;">​</a></h3><ul><li>后端服务 ：<a href="https://gitee.com/const-undefined-man/julycms.com-server" target="_blank" rel="noreferrer">julycms.com-server</a></li><li>管理后台UI ：<a href="https://gitee.com/const-undefined-man/julycms.com-console-ui" target="_blank" rel="noreferrer">julycms.com-console-ui</a></li><li>PC ：<a href="https://gitee.com/const-undefined-man/julycms.com-www-ui" target="_blank" rel="noreferrer">julycms.com-www-ui</a></li></ul><h3 id="github" tabindex="-1">github <a class="header-anchor" href="#github" aria-label="Permalink to &quot;github&quot;">​</a></h3><ul><li>后端服务 ：<a href="https://github.com/const-undefined-man/julycms.com-server" target="_blank" rel="noreferrer">julycms.com-server</a></li><li>管理后台UI ：<a href="https://github.com/const-undefined-man/julycms.com-console-ui" target="_blank" rel="noreferrer">julycms.com-console-ui</a></li><li>PC ：<a href="https://github.com/const-undefined-man/julycms.com-www-ui" target="_blank" rel="noreferrer">julycms.com-www-ui</a></li></ul><h2 id="在线体验" tabindex="-1">在线体验 <a class="header-anchor" href="#在线体验" aria-label="Permalink to &quot;在线体验&quot;">​</a></h2><p>PC前台：<a href="https://demo.julycms.com" target="_blank" rel="noreferrer">https://demo.julycms.com</a>【待完善，持续跟进中】</p><p>管理后台: <a href="https://demo.julycms.com/console" target="_blank" rel="noreferrer">https://demo.julycms.com/console</a></p><p>账号密码：julycms/julycms</p><h2 id="内置功能" tabindex="-1">内置功能 <a class="header-anchor" href="#内置功能" aria-label="Permalink to &quot;内置功能&quot;">​</a></h2><p>✅ 站点设置 ✅ 模型管理 ✅ 敏感词管理</p><p>✅ 栏目管理 ✅ 内容管理 ✅ 标签管理 ✅ 碎片管理 ✅ 附件单管理</p><p>✅ 管理员管理 ✅ 角色设置 ✅ 后台菜单 ✅ 字典管理 ✅ 操作日志</p><h2 id="安装教程" tabindex="-1">安装教程 <a class="header-anchor" href="#安装教程" aria-label="Permalink to &quot;安装教程&quot;">​</a></h2><blockquote><p>本地需要安装nodejs, nvm, docker &amp; docker-compose</p></blockquote><h3 id="后端服务" tabindex="-1">后端服务 <a class="header-anchor" href="#后端服务" aria-label="Permalink to &quot;后端服务&quot;">​</a></h3><blockquote><p>nodejs &gt;= v20; 本地用的是v20.10.0。</p></blockquote><ol><li>下载代码：<code>$ git clone git@github.com:const-undefined-man/julycms.com-server.git</code> 国内地址请看上面</li><li>进入目录：<code>$ cd julycms.com-server</code></li><li>安装依赖：<code>$ npm install</code></li><li>一键启动：<code>$ docker-compose up -d</code> 如果想一键启动，可以只下载后端服务代码</li><li>访问文档：<code>http://localhost:3000/api-doc</code></li><li>访问后台：<code>http://localhost:8080/console</code></li><li>PC：<code>http://localhost</code></li></ol><h3 id="管理后台-ui" tabindex="-1">管理后台 UI <a class="header-anchor" href="#管理后台-ui" aria-label="Permalink to &quot;管理后台 UI&quot;">​</a></h3><blockquote><p>管理后台前端因为计划的比较早，采用的nodejs v16.x, vue2.x。这里在安装的时候一定要注意。</p></blockquote><ol><li>下载代码：<code>$ git clone git@github.com:const-undefined-man/julycms.com-console-ui.git</code> 国内地址请看上面</li><li>进入目录：<code>$ cd julycms.com-console-ui</code></li><li>安装依赖：<code>$ npm install</code></li><li>切换版本：<code>$ nvm use 16.13.0</code> node版本根据自己本地的来。</li><li>项目启动：<code>$ npm run serve</code></li><li>访问地址：<code>http://localhost:8080</code></li></ol><h3 id="pc前台ui项目" tabindex="-1">PC前台UI项目 <a class="header-anchor" href="#pc前台ui项目" aria-label="Permalink to &quot;PC前台UI项目&quot;">​</a></h3><blockquote><p>待完善，持续跟进中。计划采用nuxtJs。</p></blockquote><h2 id="扩展端点api" tabindex="-1">扩展端点API <a class="header-anchor" href="#扩展端点api" aria-label="Permalink to &quot;扩展端点API&quot;">​</a></h2><p>首先需要拿到服务端代码<code>julycms.com-server</code>，进入到<code>src/apis</code>目录，新建一个目录，比如微信小程序：<code>wx-mp</code></p><p>接着在<code>wx-mp</code>目录创建模块，以及子模块。可以像<code>ConsoleModule</code>一样设置api前缀<code>consumer.apply(OperationLogMiddleware).forRoutes(&#39;api/wx-mp&#39;);</code></p><p>最后在app.module模块import。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  imports: [WxMpModule],</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h2 id="参与贡献" tabindex="-1">参与贡献 <a class="header-anchor" href="#参与贡献" aria-label="Permalink to &quot;参与贡献&quot;">​</a></h2><ol><li>Fork 本仓库</li><li>新建 feature/issue_number 分支</li><li>提交代码</li><li>新建 Pull Request</li></ol><h2 id="特别鸣谢" tabindex="-1">特别鸣谢 <a class="header-anchor" href="#特别鸣谢" aria-label="Permalink to &quot;特别鸣谢&quot;">​</a></h2><p>感谢以下的项目,排名不分先后</p><ul><li><a href="https://nestjs.com/" target="_blank" rel="noreferrer">NestJs</a></li><li><a href="https://typeorm.io/" target="_blank" rel="noreferrer">Typeorm</a></li><li><a href="https://v2.cn.vuejs.org/" target="_blank" rel="noreferrer">Vue</a></li><li><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noreferrer">Element UI</a></li><li><a href="https://swagger.io/" target="_blank" rel="noreferrer">Swagger</a></li><li><a href="https://www.docker.com/" target="_blank" rel="noreferrer">Docker</a></li><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">Docker Compose</a></li><li><a href="https://jwt.io/" target="_blank" rel="noreferrer">JWT</a></li><li><a href="https://redis.io/" target="_blank" rel="noreferrer">Redis</a></li></ul><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p><a href="https://github.com/const-undefined-man/julycms.com/blob/master/LICENSE" target="_blank" rel="noreferrer">MIT</a></p>`,42),r=[i];function s(c,n,h,d,p,u){return l(),a("div",null,r)}const g=e(t,[["render",s]]);export{k as __pageData,g as default};
