import{_ as a,c as e,o as s,a5 as i}from"./chunks/framework.tzUHMcfZ.js";const g=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md"}'),t={name:"getting-started.md"},o=i(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="后端项目" tabindex="-1">后端项目 <a class="header-anchor" href="#后端项目" aria-label="Permalink to &quot;后端项目&quot;">​</a></h2><blockquote><p>后端项目node版本要求<code>node&gt;=20.x</code>, mysql版本要求<code>mysql&gt;=8.0</code>，其余依赖包请看<code>package.json</code></p></blockquote><div class="info custom-block"><p class="custom-block-title">INFO</p><p>后端服务配置docker-compose.yml文件，可以一键启动服务，也可以管理后台UI和后端服务代码单独下载，单独启动。</p></div><ol><li>下载代码：<code>$ git clone git@github.com:const-undefined-man/julycms.com-server.git</code> 国内地址请看上面</li><li>进入目录：<code>$ cd julycms.com-server</code></li><li>安装依赖：<code>$ npm install</code></li><li>一键启动：<code>$ docker-compose up -d</code> 如果想一键启动，可以只下载后端服务代码</li><li>访问文档：<code>http://localhost:3000/api-doc</code></li><li>访问后台：<code>http://localhost:8080/console</code></li><li>PC：<code>http://localhost</code></li></ol><h3 id="修改配置" tabindex="-1">修改配置 <a class="header-anchor" href="#修改配置" aria-label="Permalink to &quot;修改配置&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>配置文件在<code>/src/config/*.ts</code>根据自己的环境修改配置</p></div><h3 id="单独启动项目" tabindex="-1">单独启动项目 <a class="header-anchor" href="#单独启动项目" aria-label="Permalink to &quot;单独启动项目&quot;">​</a></h3><p>【具体命令请看<code>package.json</code>scripts节点配置的命令，也可以根据自己的情况修改】</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:dev</span></span></code></pre></div><h3 id="api-url" tabindex="-1">api Url <a class="header-anchor" href="#api-url" aria-label="Permalink to &quot;api Url&quot;">​</a></h3><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># www网站API地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:3000/api/pc/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># 管理后台API地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:3000/api/console/</span></span></code></pre></div><h2 id="管理后台项目" tabindex="-1">管理后台项目 <a class="header-anchor" href="#管理后台项目" aria-label="Permalink to &quot;管理后台项目&quot;">​</a></h2><blockquote><p>管理后台前端因为计划的比较早，采用的nodejs v16.x, vue2.x。这里在安装的时候一定要注意。</p></blockquote><ol><li>下载代码：<code>$ git clone git@github.com:const-undefined-man/julycms.com-console-ui.git</code> 国内地址请看上面</li><li>进入目录：<code>$ cd julycms.com-console-ui</code></li><li>安装依赖：<code>$ npm install</code></li><li>切换版本：<code>$ nvm use 16.13.0</code> node版本根据自己本地的来。</li><li>项目启动：<code>$ npm run serve</code> 【具体命令请看<code>package.json</code>scripts节点配置的命令，也可以根据自己的情况修改】</li><li>访问地址：<code>http://localhost:8080</code></li></ol><h3 id="修改配置-1" tabindex="-1">修改配置 <a class="header-anchor" href="#修改配置-1" aria-label="Permalink to &quot;修改配置&quot;">​</a></h3><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">各个环境对应的 .env.环境 里面</span></span></code></pre></div><h3 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-label="Permalink to &quot;打包&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div>`,19),l=[o];function c(n,d,h,p,r,k){return s(),e("div",null,l)}const m=a(t,[["render",c]]);export{g as __pageData,m as default};
